package university.UserInterfaces.WorkAreas.AdminRole.AdminiterUserAccountWork;

import university.Business.Business;
import university.Employer.Employee.EmployeeProfile;
import  university.Person.Faculty.FacultyProfile;
import university.Person.Student.StudentProfile;
import university.Business.UserAccounts.UserAccount;
import university.Business.UserAccounts.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import java.time.LocalDateTime;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sange
 */
public class AdminUserAccount extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Business business;
    UserAccount selecteduseraccount;

    String MANAGE_STUDENT = "ManagaeStudent";
    String MANAGE_FACULTY = "ManagaeFaculty";
    String MANAGE_ALL_ACCOUNTS = "ManageAllUsers";

    public AdminUserAccount(Business business, UserAccount sua, JPanel jp) {

        this.business = business;
        this.CardSequencePanel = jp;
        this.selecteduseraccount = sua;
        initComponents();

        refreshTextField();
        setViewMode();
        setNuIdFieldVisibility();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        lblAccountStatus = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblNuId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtNuId = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        comboAccountStatus = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(176, 224, 230));
        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Administer User Account");
        add(jLabel2);
        jLabel2.setBounds(190, 50, 310, 28);

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(10, 10, 100, 23);

        lblId.setText("ID: ");
        add(lblId);
        lblId.setBounds(130, 100, 90, 16);

        lblLastName.setText("Last Name:");
        add(lblLastName);
        lblLastName.setBounds(130, 190, 90, 16);

        lblEmailAddress.setText("Email Address: ");
        add(lblEmailAddress);
        lblEmailAddress.setBounds(130, 230, 90, 16);

        lblAccountStatus.setText("Account Status:");
        add(lblAccountStatus);
        lblAccountStatus.setBounds(130, 340, 90, 16);

        lblPhoneNumber.setText("Phone Number:");
        add(lblPhoneNumber);
        lblPhoneNumber.setBounds(130, 270, 90, 16);

        lblFirstName.setText("First Name:");
        add(lblFirstName);
        lblFirstName.setBounds(130, 140, 90, 16);

        lblNuId.setText("NUID:");
        add(lblNuId);
        lblNuId.setBounds(130, 310, 90, 16);
        add(txtId);
        txtId.setBounds(270, 100, 200, 30);
        add(txtFirstName);
        txtFirstName.setBounds(270, 140, 200, 30);
        add(txtLastName);
        txtLastName.setBounds(270, 180, 200, 30);
        add(txtEmailAddress);
        txtEmailAddress.setBounds(270, 220, 200, 30);
        add(txtPhoneNumber);
        txtPhoneNumber.setBounds(270, 260, 200, 30);
        add(txtNuId);
        txtNuId.setBounds(270, 300, 200, 30);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate);
        btnUpdate.setBounds(420, 410, 100, 23);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave);
        btnSave.setBounds(180, 410, 100, 23);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(310, 410, 90, 23);

        comboAccountStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Inactive" }));
        comboAccountStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAccountStatusActionPerformed(evt);
            }
        });
        add(comboAccountStatus);
        comboAccountStatus.setBounds(270, 340, 200, 30);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        String firstName = txtFirstName.getText();
        String lastName = txtLastName.getText();
        String emailId = txtEmailAddress.getText();
        String nuId = txtNuId.getText();
        String status = (String) comboAccountStatus.getSelectedItem();
        long phoneNumber;

        if (firstName.isEmpty() || lastName.isEmpty() || emailId.isEmpty()
                || status.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Please enter all the required values", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (selecteduseraccount.getAssociatedPersonProfile() instanceof StudentProfile) {
            if (nuId.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "Please enter NUID", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        try {
            phoneNumber = Long.parseLong(txtPhoneNumber.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Please enter a valid phone number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        selecteduseraccount.setAccountStatus(status);
        selecteduseraccount.setLastActivity("Updated");
        selecteduseraccount.getProfile().getPerson().setFirstName(firstName);
        selecteduseraccount.getProfile().getPerson().setLastName(lastName);
        selecteduseraccount.getProfile().getPerson().setEmailId(emailId);
        selecteduseraccount.getProfile().getPerson().setPhoneNumber(phoneNumber);
        selecteduseraccount.setLastActivity("Updated");
        selecteduseraccount.setLastUpdated(LocalDateTime.now());

        if (selecteduseraccount.getProfile() instanceof StudentProfile) {
            ((StudentProfile) selecteduseraccount.getProfile()).setNuId(nuId);
        }

        JOptionPane.showMessageDialog(this, "Profile has been successfully updated",
                "Information", JOptionPane.INFORMATION_MESSAGE);

        CardSequencePanel.remove(this);
        Component[] componentArray = CardSequencePanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageUserAccountsJPanel manageUserAccountsJPanel = (ManageUserAccountsJPanel) component;
        refreshTableBasedOnActivityFrom(manageUserAccountsJPanel);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);


    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        setEditMode();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        UserAccountDirectory uadirectory = business.getUserAccountDirectory();
        uadirectory.removeAccount(selecteduseraccount);

        JOptionPane.showMessageDialog(this, "Account has been successfully deleted",
                "Information", JOptionPane.INFORMATION_MESSAGE);

        CardSequencePanel.remove(this);
        Component[] componentArray = CardSequencePanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ManageUserAccountsJPanel manageUserAccountsJPanel = (ManageUserAccountsJPanel) component;
        refreshTableBasedOnActivityFrom(manageUserAccountsJPanel);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void comboAccountStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAccountStatusActionPerformed
        setNuIdFieldVisibility();
    }//GEN-LAST:event_comboAccountStatusActionPerformed

    private void refreshTextField() {

        txtId.setText(selecteduseraccount.getProfile().getPerson().getId());
        txtFirstName.setText(selecteduseraccount.getProfile().getPerson().getFirstName());
        txtLastName.setText(selecteduseraccount.getProfile().getPerson().getLastName());
        txtPhoneNumber.setText(String.valueOf(selecteduseraccount.getProfile().getPerson().getPhoneNumber()));
        txtEmailAddress.setText(selecteduseraccount.getProfile().getPerson().getEmailId());
        comboAccountStatus.setSelectedItem(selecteduseraccount.getAccountStatus());
        if (selecteduseraccount.getProfile() instanceof StudentProfile) {
            txtNuId.setText(((StudentProfile) selecteduseraccount.getProfile()).getNuId());
        }

    }

    private void setViewMode() {

        txtId.setEnabled(false);
        txtFirstName.setEditable(false);
        txtLastName.setEditable(false);
        txtPhoneNumber.setEditable(false);
        txtEmailAddress.setEditable(false);
        comboAccountStatus.setEnabled(false);
        txtNuId.setEditable(false);
        btnSave.setEnabled(false);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(true);

    }

    private void setEditMode() {

        txtId.setEnabled(false);
        txtFirstName.setEditable(true);
        txtLastName.setEditable(true);
        txtPhoneNumber.setEditable(true);
        txtEmailAddress.setEditable(true);
        comboAccountStatus.setEnabled(true);
        if ((selecteduseraccount.getAssociatedPersonProfile() instanceof StudentProfile)) {
            txtNuId.setEditable(true);
        }
        btnSave.setEnabled(true);
        btnDelete.setEnabled(true);
        btnUpdate.setEnabled(false);
    }

    private void setNuIdFieldVisibility() {
        if (!(selecteduseraccount.getAssociatedPersonProfile() instanceof StudentProfile)) {
            txtNuId.setEnabled(false);
        } else {
            txtNuId.setEnabled(true);
        }
    }

    private void refreshTableBasedOnActivityFrom(ManageUserAccountsJPanel manageUserAccountsJPanel) {
        if (selecteduseraccount.getAssociatedPersonProfile() instanceof StudentProfile) {
            manageUserAccountsJPanel.refreshTable(MANAGE_STUDENT);
        } else if (selecteduseraccount.getAssociatedPersonProfile() instanceof FacultyProfile) {
            manageUserAccountsJPanel.refreshTable(MANAGE_FACULTY);
        } else if (selecteduseraccount.getAssociatedPersonProfile() instanceof EmployeeProfile) {
            manageUserAccountsJPanel.refreshTable(MANAGE_ALL_ACCOUNTS);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboAccountStatus;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAccountStatus;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblNuId;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtNuId;
    private javax.swing.JTextField txtPhoneNumber;
    // End of variables declaration//GEN-END:variables

}
