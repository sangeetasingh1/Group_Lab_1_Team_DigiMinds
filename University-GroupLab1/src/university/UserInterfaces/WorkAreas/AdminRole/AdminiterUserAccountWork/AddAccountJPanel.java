package university.UserInterfaces.WorkAreas.AdminRole.AdminiterUserAccountWork;

import university.Business.Business;
import university.Person.Person;
import university.Person.PersonDirectory;
import university.Employer.Employee.EmployeeDirectory;
import university.Employer.Employee.EmployeeProfile;
import  university.Person.Faculty.FacultyDirectory;
import  university.Person.Faculty.FacultyProfile;
import university.Person.Student.StudentDirectory;
import university.Person.Student.StudentProfile;
import  university.Business.UserAccounts.UserAccount;
import  university.Business.UserAccounts.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author sange
 */
public class AddAccountJPanel extends javax.swing.JPanel {

    JPanel CardSequencePanel;
    Business business;
    UserAccount selecteduseraccount;

    String manageActivityType;

    String MANAGE_STUDENT = "ManagaeStudent";
    String MANAGE_FACULTY = "ManagaeFaculty";
    String MANAGE_ALL_ACCOUNTS = "ManageAllUsers";

    /**
     * Creates new form AddAccountJPanel
     */
    public AddAccountJPanel(Business business, JPanel jp, String manageActivityType) {

        this.business = business;
        this.CardSequencePanel = jp;
        this.manageActivityType = manageActivityType;
        initComponents();
        setNuIdFieldVisibility();
        accountTypeVisibility();

    }

    private void accountTypeVisibility() {
        if (manageActivityType.equalsIgnoreCase(MANAGE_STUDENT)) {
            comboAccountType.setSelectedIndex(0);//Student is at index 0 which is why this index is selected by default
            comboAccountType.setEnabled(false);
        } else if (manageActivityType.equalsIgnoreCase(MANAGE_FACULTY)) {
            comboAccountType.setSelectedIndex(1);//Faculty is at index 1 which is why this index is selected by default
            comboAccountType.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        lblLastName = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblNuId = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtNuId = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        lblAccountType = new javax.swing.JLabel();
        comboAccountType = new javax.swing.JComboBox<>();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();

        setBackground(new java.awt.Color(176, 224, 230));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Create Account");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblId.setText("ID: ");

        lblLastName.setText("Last Name:");

        lblEmailAddress.setText("Email Address: ");

        lblUserName.setText("User name:");

        lblPhoneNumber.setText("Phone Number:");

        lblFirstName.setText("First Name:");

        lblNuId.setText("NUID:");

        txtId.setEnabled(false);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblAccountType.setText("Account Type");

        comboAccountType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Faculty", "Employee" }));
        comboAccountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAccountTypeActionPerformed(evt);
            }
        });

        lblPassword.setText("Password:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblNuId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtNuId, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblAccountType))
                                    .addGap(50, 50, 50)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtId)
                                        .addComponent(comboAccountType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(255, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnBack)
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAccountType, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(comboAccountType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFirstName))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblLastName))
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblEmailAddress))
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblPhoneNumber))
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblNuId))
                    .addComponent(txtNuId, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addComponent(btnSave)
                .addContainerGap(49, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CardSequencePanel.remove(this);
        ((java.awt.CardLayout) CardSequencePanel.getLayout()).next(CardSequencePanel);

    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed

        String studentNuId = txtNuId.getText();
        String firstName = txtFirstName.getText();
        String lastName = txtLastName.getText();
        String emailAddress = txtEmailAddress.getText();
        String userName = txtUserName.getText();
        String password = txtPassword.getText();
        long phoneNumber;

        if (firstName.isEmpty() || lastName.isEmpty() || emailAddress.isEmpty()
                || userName.isEmpty() || password.isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Please enter all the required values", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (((String) (comboAccountType.getSelectedItem())).equalsIgnoreCase("Student")) {
            if (studentNuId.isEmpty()) {
                JOptionPane.showMessageDialog(this,
                        "Please enter NUID", "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        try {
            phoneNumber = Long.parseLong(txtPhoneNumber.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,
                    "Please enter a valid phone number", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        PersonDirectory persondirectory = business.getPersonDirectory();
        Person person = persondirectory.newPerson();

        person.setFirstName(firstName);
        person.setLastName(lastName);
        person.setEmailId(emailAddress);
        person.setPhoneNumber(phoneNumber);

        if (((String) (comboAccountType.getSelectedItem())).equalsIgnoreCase("Student")) {

            StudentDirectory studentDirectory = business.getStudentDirectory();
            StudentProfile studentProfile = studentDirectory.newStudentProfile(person);
            studentProfile.setNuId(studentNuId);
            UserAccountDirectory uadirectory = business.getUserAccountDirectory();
            selecteduseraccount = uadirectory.newUserAccount(studentProfile, userName, password, "Created");

        } else if (((String) (comboAccountType.getSelectedItem())).equalsIgnoreCase("Faculty")) {

            FacultyDirectory facultyDirectory = business.getFacultytDirectory();
            FacultyProfile facultyProfile = facultyDirectory.newFacultyProfile(person);
            UserAccountDirectory uadirectory = business.getUserAccountDirectory();
            selecteduseraccount = uadirectory.newUserAccount(facultyProfile, userName, password, "Created");

        } else if (((String) (comboAccountType.getSelectedItem())).equalsIgnoreCase("Employee")) {

            EmployeeDirectory employeeDirectory = business.getEmployeeDirectory();
            EmployeeProfile employeProfile = employeeDirectory.newEmployeeProfile(person);
            UserAccountDirectory uadirectory = business.getUserAccountDirectory();
            selecteduseraccount = uadirectory.newUserAccount(employeProfile, userName, password, "Created");
        }

        JOptionPane.showMessageDialog(this, "Profile has been successfully Created",
                "Information", JOptionPane.INFORMATION_MESSAGE);

        CardSequencePanel.remove(this);
        Component[] componentArray = CardSequencePanel.getComponents();
        Component component = componentArray[componentArray.length-1];
        ManageUserAccountsJPanel manageUserAccountsJPanel = (ManageUserAccountsJPanel) component;
        refreshTableBasedOnActivityFrom(manageUserAccountsJPanel);
        CardLayout layout = (CardLayout) CardSequencePanel.getLayout();
        layout.previous(CardSequencePanel);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void comboAccountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAccountTypeActionPerformed
        setNuIdFieldVisibility();
    }//GEN-LAST:event_comboAccountTypeActionPerformed

    private void setNuIdFieldVisibility() {
        if (!((String) (comboAccountType.getSelectedItem())).equalsIgnoreCase("Student")) {
            txtNuId.setEnabled(false);
        } else {
            txtNuId.setEnabled(true);
        }
    }

    private void refreshTableBasedOnActivityFrom(ManageUserAccountsJPanel manageUserAccountsJPanel) {
        if (selecteduseraccount.getAssociatedPersonProfile() instanceof StudentProfile) {
            manageUserAccountsJPanel.refreshTable(MANAGE_STUDENT);
        } else if (selecteduseraccount.getAssociatedPersonProfile() instanceof FacultyProfile) {
            manageUserAccountsJPanel.refreshTable(MANAGE_FACULTY);
        } else if (selecteduseraccount.getAssociatedPersonProfile() instanceof EmployeeProfile) {
            manageUserAccountsJPanel.refreshTable(MANAGE_ALL_ACCOUNTS);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> comboAccountType;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblAccountType;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblNuId;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JTextField txtEmailAddress;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtNuId;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhoneNumber;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
